# -*- coding: utf-8 -*-
"""DNN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15gLoWS93bzwB6GdO5DgoJ8zH3MjG2MD0
"""

import tensorflow as tf
from tensorflow.keras import layers
import numpy as np
import pandas as pd
import tempfile
from sklearn.model_selection import train_test_split

BCI_Data=pd.read_excel('BCI_DATA3_4.xlsx')
X=BCI_Data.iloc[:,:-1].values
y=BCI_Data.iloc[:,-1].values
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=44, shuffle =True)

model = tf.keras.Sequential([
    layers.Dense(64, activation='relu', input_shape=(X_train.shape[1],)),
    layers.Dense(128, activation='relu'),
    layers.Dense(5, activation='softmax')
])
model.compile(optimizer='adam',
              loss='categorical_crossentropy',
              metrics=['accuracy'])
from keras.utils import to_categorical

y_train = to_categorical(y_train, num_classes=5)
y_test = to_categorical(y_test, num_classes=5)
model.fit(X_train, y_train, epochs=5)
test_loss, test_acc = model.evaluate(X_test, y_test)
print('Test accuracy:', test_acc)